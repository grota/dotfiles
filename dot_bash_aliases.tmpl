#!/usr/bin/env bash
# vim: set tabstop=2 shiftwidth=2 ft=bash foldmethod=marker:

if [ -z "$TMUX" ]; then
  PATH=$HOME/local/bin:$HOME/.config/composer/vendor/bin:$PATH
  PATH=$PATH:/usr/local/go/bin
  PATH="$(go env GOPATH)/bin:$HOME/.local/bin/:$PATH"
  export PATH
  # from beginner yt video instructions.
  GOPATH="$(go env GOPATH):/home/grota/Projects/personal/gocode"
  export GOPATH
fi

export MANPATH=:~/local/share/man

PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'history -a; history -n; ps1_update --notime --hostname --prompt \>;'

for file in ~/.local/grota/bash/* ; do
  . "$file"
done

complete -C "$(which aws_completer)" aws

DOTFILESREPO="$("$HOME"/local/bin/chezmoi source-path)"
export DOTFILESREPO

export EDITOR=nvim
export MANPAGER="sh -c 'col -bx | bat --language=man -p'"
export MANROFFOPT="-c"
HISTFILESIZE=1000000
HISTSIZE=500000
HISTCONTROL="erasedups:ignoreboth"
HISTIGNORE="clear:bg:fg:cd:cd -:exit:date:w:gs:gss:ga:gau:gk:gd:gdc:gf:gb:grbi:gcm*:l:resunity:ss:"

export COMPOSE_DOCKER_CLI_BUILD=1
export DOCKER_BUILDKIT=1

# oh god, this feels good
[[ -n "$DISPLAY" ]] && xset r rate 200 90

# disable <CTRL-S> and <CTRL-Q> terminal settings, I want to use them in vim
stty stop undef
stty start undef

# MOTD kind of output
[ -n "$PS1" ] && (export BINPATHS=(${PATH//:/ }) && whatis "$(find "${BINPATHS[@]}" -maxdepth 1 -printf '%f\n' -type f 2>/dev/null| shuf -n 1)")

if [ -f  /usr/share/doc/pkgfile/command-not-found.bash ]; then
  .  /usr/share/doc/pkgfile/command-not-found.bash
fi

# Make Bash append rather than overwrite the history on disk
shopt -s histappend
shopt -s checkwinsize

{{- if .headless -}}
{{/* This assumes that on an headless system the ssh-agent.service user unit is enabled */}}
if [[ -z "${SSH_CONNECTION}" ]]; then
    export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
fi
export GPG_TTY=$(tty)
{{- else -}}
{{/* Use gcr's ssh agent */}}
export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh
{{- end -}}

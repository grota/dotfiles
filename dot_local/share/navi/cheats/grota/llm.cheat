% llm

;llm chat <llm_template> -o temperature <temperature> <template_params>
# new chat
llm chat <llm_model> <llm_template> <llm_temperature> <template_params>

# logs
visidata $HOME/.config/io.datasette.llm/logs.db

# edit templates
$EDITOR $(llm templates path)

$ llm_model: v=<model>; \
if [ "$v" = 'none' ]; then \
  echo ''; \
else \
  echo "-m $v" ; \
fi
$ model: llm models --- --column 2 --delimiter ':\s|\s\('

$ llm_template: v=<template>; \
if [ "$v" = 'none' ]; then \
  echo ''; \
else \
  echo "-t $v" ; \
fi
$ template: llm templates; echo 'none' --- --column 1 --delimiter '\s+:\s'

$ llm_temperature: v=<temperature>; \
if [ "$v" = 'none' ]; then \
  echo ''; \
else \
  echo "-o temperature $v" ; \
fi
$ temperature:  echo -e '0.3\n0.1\n0.5\n1\nnone' --- --fzf-overrides '--print-query --query 0.1 --no-select-1'

; gather all the words starting with $ (params of a template and prefill them with XXX value)
; Somehow navi blocks the user input in the following:
;$ template_params: acc=""; \
;for param in $(llm templates show $template | grep -o '\$[a-zA-Z_]\+' | sort | uniq | sed 's/\$//g'); do \
;  param_value=""; \
;  while [[ -z "$param_value" ]]; do \
;    param_value=$(bash -c 'read -p "Value of '"$param"': " input < /dev/tty; echo $input'); \
;  done; \
;  acc+="-p $param $param_value"; \
;done; \
;echo "$acc";
$ template_params: v=<template>; \
if [ "$v" = 'none' ]; then \
  echo ''; \
else \
  llm templates show $template | grep -o '\$[a-zA-Z_]\+' | sort | uniq | sed 's/\$//g' | awk '{print "-p " $1 " XXX"}' | tr '\n' ' ' | sed 's/ $/\n/' ; \
fi --- --fzf-overrides '--exit-0'
